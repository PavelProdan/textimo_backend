<!DOCTYPE html>
<html>

<head>
    <title>Textimo LivePage</title>

    <style>
        :root {
        --gradient_color_one: #33ccff;
        --gradient_color_two: #ff99cc; 
        }

        .background_gradient{
            position: fixed;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            overflow: auto;
            background: linear-gradient(to top right, var(--gradient_color_one) 0%, var(--gradient_color_two) 100%);
        }

        .align-content-middle{
            /* this is the CSS for middle json option. This css
            has to be applied to the background div */
            
            display: flex;
            flex-flow: column nowrap;
            justify-content: center;
            align-items: center;
        }

        .align-content-center{
            /* this is the CSS for center json option. This css
            has to be applied to each text tag */

            text-align: center;
            padding-bottom: 15px;
        }

        .align-content-left{
            /* this is the CSS for center json option. This css
            has to be applied to each text tag */

            padding-left: 15px;
            padding-bottom: 15px;
        }
    </style>
</head>


<body>
    <div class="background_gradient">
        <h2 id="title" class="align-content-left">Song title</h2>
        <p id="live_content" class="align-content-left"></p>
        <h3 id="current_verse_number">3</h3>

        <button type="button" onclick="change_background_color('#ccff99', '#ccff99')">update colors</button>
    </div>
        

    <script src="/socket.io/socket.io.js"></script>
    <script>
        //page design
        var root = document.querySelector(':root');
        function change_background_color(color_one, color_two) {
            root.style.setProperty('--gradient_color_one', color_one);
            root.style.setProperty('--gradient_color_two', color_two);
        }


        //socket io
        var socket = io();

        //receive livecontent from socket and print the message in the console
        socket.on('livecontent', function(data) {
            document.getElementById("live_content").innerHTML = data;
        });

    </script>
</body>

</html>